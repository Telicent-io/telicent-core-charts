apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"},"name":"release-name-query-ui","namespace":"default"}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      app.kubernetes.io/version: 1.2.0
      helm.sh/chart: query-ui-0.1.1
      telicent.io/resource: "true"
    name: release-name-query-ui
    namespace: default
- apiVersion: v1
  data:
    env-config.js: "const DOMAIN = \"apps.telicent.io\"; \n// Configure the Smart
      Cache Graph GraphQL API endpoint as used by the client browser.\nwindow.GRAPHQL_URL
      = `https://${DOMAIN}/api/graphql/knowledge/graphql`;\n// Configure the Smart
      Cache Graph SPARQL API endpoint as used by the client browser.\nwindow.SPARQL_URL
      = `https://${DOMAIN}/api/sparql/knowledge/sparql`;\n// Configure the Access
      API endpoint as used by the client browser.\nwindow.ACCESS_URL = `https://${DOMAIN}/api/access`;\nwindow.BETA
      = false;\n"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"env-config.js":"const DOMAIN = \"apps.telicent.io\"; \n// Configure the Smart Cache Graph GraphQL API endpoint as used by the client browser.\nwindow.GRAPHQL_URL = `https://${DOMAIN}/api/graphql/knowledge/graphql`;\n// Configure the Smart Cache Graph SPARQL API endpoint as used by the client browser.\nwindow.SPARQL_URL = `https://${DOMAIN}/api/sparql/knowledge/sparql`;\n// Configure the Access API endpoint as used by the client browser.\nwindow.ACCESS_URL = `https://${DOMAIN}/api/access`;\nwindow.BETA = false;\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","helm.sh/chart":"query-ui-0.1.1"},"name":"release-name-query-ui-env-configjs","namespace":"default"}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      helm.sh/chart: query-ui-0.1.1
    name: release-name-query-ui-env-configjs
    namespace: default
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"},"name":"release-name-query-ui","namespace":"default"},"spec":{"ports":[{"appProtocol":"http","name":"http","port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/name":"query-ui"},"type":"ClusterIP"}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      app.kubernetes.io/version: 1.2.0
      helm.sh/chart: query-ui-0.1.1
      telicent.io/resource: "true"
    name: release-name-query-ui
    namespace: default
  spec:
    ports:
    - appProtocol: http
      name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: query-ui
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"},"name":"release-name-query-ui","namespace":"default"},"spec":{"replicas":1,"revisionHistoryLimit":5,"selector":{"matchLabels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/name":"query-ui"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":null,"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"}},"spec":{"containers":[{"image":"telicent/telicent-query:1.2.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/query/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"periodSeconds":30,"timeoutSeconds":2},"name":"query-ui","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/query/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"periodSeconds":30,"timeoutSeconds":2},"resources":{"limits":{"cpu":"100m","memory":"1000Mi"},"requests":{"cpu":"10m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"runAsGroup":185,"runAsNonRoot":true,"runAsUser":185,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/usr/local/nginx/html/env-config.js","name":"app-config-volume","subPath":"env-config.js"}]}],"securityContext":{"fsGroup":185,"runAsGroup":185,"runAsNonRoot":true,"runAsUser":185,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"release-name-query-ui","volumes":[{"configMap":{"name":"release-name-query-ui-env-configjs"},"name":"app-config-volume"}]}}}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      app.kubernetes.io/version: 1.2.0
      helm.sh/chart: query-ui-0.1.1
      telicent.io/resource: "true"
    name: release-name-query-ui
    namespace: default
  spec:
    replicas: 1
    revisionHistoryLimit: 5
    selector:
      matchLabels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: query-ui
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: query-ui
          app.kubernetes.io/version: 1.2.0
          helm.sh/chart: query-ui-0.1.1
          telicent.io/resource: "true"
      spec:
        containers:
        - image: telicent/telicent-query:1.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /query/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 2
          name: query-ui
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /query/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 100m
              memory: 1000Mi
            requests:
              cpu: 10m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 185
            runAsNonRoot: true
            runAsUser: 185
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
          - mountPath: /usr/local/nginx/html/env-config.js
            name: app-config-volume
            subPath: env-config.js
        securityContext:
          fsGroup: 185
          runAsGroup: 185
          runAsNonRoot: true
          runAsUser: 185
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: release-name-query-ui
        volumes:
        - configMap:
            name: release-name-query-ui-env-configjs
          name: app-config-volume
- apiVersion: security.istio.io/v1
  kind: AuthorizationPolicy
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"security.istio.io/v1","kind":"AuthorizationPolicy","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"},"name":"release-name-query-ui-ingress","namespace":"default"},"spec":{"action":"ALLOW","rules":[{"from":[{"source":{"principals":["cluster.local/ns/istio-system/sa/istio-ingress"]}}],"to":[{"operation":{"methods":["GET"]}}]}],"selector":{"matchLabels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/name":"query-ui"}}}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      app.kubernetes.io/version: 1.2.0
      helm.sh/chart: query-ui-0.1.1
      telicent.io/resource: "true"
    name: release-name-query-ui-ingress
    namespace: default
  spec:
    action: ALLOW
    rules:
    - from:
      - source:
          principals:
          - cluster.local/ns/istio-system/sa/istio-ingress
      to:
      - operation:
          methods:
          - GET
    selector:
      matchLabels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: query-ui
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.istio.io/v1alpha3","kind":"VirtualService","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"release-name","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"query-ui","app.kubernetes.io/version":"1.2.0","helm.sh/chart":"query-ui-0.1.1","telicent.io/resource":"true"},"name":"release-name-query-ui","namespace":"default"},"spec":{"gateways":["istio-system/gateways-apps"],"hosts":["apps.telicent.io"],"http":[{"match":[{"uri":{"exact":"/query"}}],"redirect":{"uri":"/query/"}},{"match":[{"uri":{"prefix":"/query/"}}],"route":[{"destination":{"host":"release-name-query-ui","port":{"number":8080}}}]}]}}
    labels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: query-ui
      app.kubernetes.io/version: 1.2.0
      helm.sh/chart: query-ui-0.1.1
      telicent.io/resource: "true"
    name: release-name-query-ui
    namespace: default
  spec:
    gateways:
    - istio-system/gateways-apps
    hosts:
    - apps.telicent.io
    http:
    - match:
      - uri:
          exact: /query
      redirect:
        uri: /query/
    - match:
      - uri:
          prefix: /query/
      route:
      - destination:
          host: release-name-query-ui
          port:
            number: 8080
kind: List
metadata: {}
