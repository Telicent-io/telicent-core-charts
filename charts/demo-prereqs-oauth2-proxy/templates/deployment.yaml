apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oauth2-proxy.fullname" . }}
  labels:
  {{- include "oauth2-proxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
    {{- include "oauth2-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "oauth2-proxy.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: {{ include "oauth2-proxy.envSecretName" . }}
        - configMapRef:
            name: {{ include "oauth2-proxy.envConfigmapName" . }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
        name: oauth2-proxy
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- if or .Values.existingCacertConfigmap .Values.cacert }}
        volumeMounts:
        - name: cert-volume
          mountPath: /etc/ssl/certs
        {{- end }}
      {{- if or .Values.existingCacertConfigmap .Values.cacert }}
      volumes:
      - name: cert-volume
        configMap:
          name: {{ include "oauth2-proxy.cacertConfigmapName" . }}
      {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "oauth2-proxy.serviceAccountName" . }}
