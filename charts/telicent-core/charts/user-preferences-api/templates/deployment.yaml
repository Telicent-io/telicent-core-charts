apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-preferences-api.fullname" . }}
  labels:
    {{- include "user-preferences-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
    {{- include "user-preferences-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      labels:
        {{- include "user-preferences-api.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: user-preferences-api
        envFrom:    
        - configMapRef:
            name: {{ include "user-preferences-api.fullname" . }}
        env:
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              {{- if .Values.mongo.existingMongoPasswordSecret }}
              name: {{ .Values.mongo.existingMongoPasswordSecret }}
              {{- else }}
              name: {{ include "user-preferences-api.secret" . }}
              {{- end }}
        image: {{ .Values.image.repository }}:{{ include "user-preferences-api.version" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /version-info
            port: 11111
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 5
        ports:
        - containerPort: 11111
          name: http
          protocol: TCP
        - containerPort: 9464
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 11111
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
      {{- if .Values.global.existingTruststoreSecretName }}
        - name: truststore-volume
          mountPath: /app/config/truststore
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
      {{- end }}
      {{- if contains "tls=true" .Values.mongo.url }}
        - name: ca-certificate-volume
          mountPath: {{ regexReplaceAll ".*tlsCAFile=([^&]+).*" .Values.mongo.url "$1" | default "/app/config/ca-certificate" }}
          readOnly: true
      {{- end }}



      volumes:
      {{- if .Values.global.existingTruststoreSecretName }}
      - name: truststore-volume
        secret:
          secretName: {{ .Values.global.existingTruststoreSecretName }}
          optional: true
      {{- end }}
      {{- if .Values.mongo.existingCaSecret }}
      - name: ca-certificate-volume
        secret:
          secretName: {{ .Values.mongo.existingCaSecret }}
      {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "user-preferences-api.serviceAccountName" . }}
