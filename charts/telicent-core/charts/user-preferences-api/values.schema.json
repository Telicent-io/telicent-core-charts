{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "existingTruststoreSecretName": {
                    "type": "string",
                    "description": "Name of an existing secret containing the truststore",
                    "default": ""
                },
                "istioServiceAccountName": {
                    "type": "string",
                    "description": "Name of the Istio service account to use for the User Preferences API",
                    "default": "istio-ingress"
                },
                "istioNamespace": {
                    "type": "string",
                    "description": "Istio Namespace where Istio is installed",
                    "default": "istio-system"
                }
            }
        },
        "configuration": {
            "type": "object",
            "properties": {
                "javaOptions": {
                    "type": "string",
                    "description": "JVM options for the application",
                    "default": "-Xms512m -Xmx512m"
                }
            }
        },
        "mongo": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "MongoDB connection URL",
                    "default": "mongodb://mongodb-demo-prereqs-mongodb-svc.mongodb-dev.svc.cluster.local:27017/user-preferences?authSource=admin"
                },
                "username": {
                    "type": "string",
                    "description": "MongoDB username",
                    "default": "user-preferences"
                },
                "password": {
                    "type": "string",
                    "description": "MongoDB password",
                    "default": "your.mongo.password.here"
                },
                "database": {
                    "type": "string",
                    "description": "MongoDB database",
                    "default": "user-preferences"
                },
                "existingMongoPasswordSecret": {
                    "type": "string",
                    "description": "Existing secret containing the MongoDB password",
                    "default": ""
                },
                "existingCaSecret": {
                    "type": "string",
                    "description": "If you have an existing secret for the CA certificate, you can specify it here. If you've specified to use TLS in the url, you must provide a CA certificate.",
                    "default": ""
                },
                "cacertPath": {
                    "type": "string",
                    "description": "Path to the CA certificate file, must be set if TLS is enabled in the url and mirror the path in the connectionStringOptions",
                    "default": ""
                }
            }
        },
        "replicas": {
            "type": "number",
            "description": "Number of User Preferences API replicas to deploy",
            "default": 1
        },
        "revisionHistoryLimit": {
            "type": "number",
            "description": "Number of controller revisions to keep",
            "default": 5
        },
        "annotations": {
            "type": "object",
            "description": "Add extra annotations to the Deployment object",
            "default": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "User Preferences API image registry",
                    "default": "REGISTRY_NAME"
                },
                "repository": {
                    "type": "string",
                    "description": "User Preferences API image name",
                    "default": "REPOSITORY_NAME/telicent-user-preferences-service"
                },
                "tag": {
                    "type": "string",
                    "description": "User Preferences API image tag. If not set, a tag is generated using the appVersion",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "User Preferences API image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "description": "Set containers' CPU request",
                            "default": "100m"
                        },
                        "memory": {
                            "type": "string",
                            "description": "Set containers' memory request",
                            "default": "768Mi"
                        }
                    }
                },
                "limits": {
                    "type": "object",
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "description": "Set containers' CPU limit",
                            "default": "250m"
                        },
                        "memory": {
                            "type": "string",
                            "description": "Set containers' memory limit",
                            "default": "1024Mi"
                        }
                    }
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "runAsUser": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsUser User ID",
                    "default": 185
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsGroup Group ID",
                    "default": 185
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set container's Security Context runAsNonRoot",
                    "default": true
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean",
                    "description": "Set container's Security Context allowPrivilegeEscalation",
                    "default": false
                },
                "capabilities": {
                    "type": "object",
                    "properties": {
                        "drop": {
                            "type": "array",
                            "description": "List of capabilities to be dropped",
                            "default": [
                                "ALL"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set container's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "runAsUser": {
                    "type": "number",
                    "description": "Set the provisioning pod's Security Context runAsUser User ID",
                    "default": 185
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set the provisioning pod's Security Context runAsGroup Group ID",
                    "default": 185
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set the provisioning pod's Security Context runAsNonRoot",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set the provisioning pod's Group ID for the mounted volumes' filesystem",
                    "default": 185
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set the provisioning pod's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "number",
                            "description": "Port for the Prometheus service",
                            "default": 9464
                        },
                        "name": {
                            "type": "string",
                            "description": "Name for the Prometheus service",
                            "default": "metrics"
                        }
                    }
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "number",
                    "description": "User Preferences API service port",
                    "default": 11111
                },
                "type": {
                    "type": "string",
                    "description": "User Preferences API service type",
                    "default": "ClusterIP"
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "principal": {
                    "type": "string",
                    "description": "Principal to use for ingress traffic. If not set, defaults to the Istio service account in the istio-system",
                    "default": ""
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the created ServiceAccount. If not set, a name is generated using the fullname template",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                }
            }
        }
    }
}