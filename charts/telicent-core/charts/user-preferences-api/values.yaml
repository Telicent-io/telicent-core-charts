# Default values for Telicent User Preferences API Helm Chart
#

# global configuration
# This section contains global values that are used across the charts inherited from the telicent core umbrella
global:
  # existingTruststoreSecretName is the name of an existing secret containing the truststore
  existingTruststoreSecretName: ""
  # @key global.istioServiceAccountName The name of the Istio service account to use for the Access API
  istioServiceAccountName: istio-ingress
  # @key global.istioNamespace The namespace where Istio is installed
  istioNamespace: istio-system

# configuration is for Telicent specific settings
# This section contains configuration options specific to the Telicent application.
# See: https://docs.telicent.io/en/latest/helm-charts/smart-cache-graph.html#configuration // TODO get proper link
# for full documentation
configuration:
  # javaOptions are the JVM options for the application
  javaOptions: "-Xms512m -Xmx512m"

# mongo configuration
# This section contains the MongoDB configuration for the user preferences service.
mongo:
  # url is the MongoDB connection string
  url: mongodb://mongodb-demo-prereqs-mongodb-svc.mongodb-dev.svc.cluster.local:27017/user-preferences?authSource=admin
  # username and is used for authentication
  username: user-preferences
  # password is the password for the MongoDB user
  # If you have an existing secret for the password, you can use existingMongoPasswordSecret
  password: "your.mongo.password.here"
  # database is the name of the MongoDB database to use
  database: user-preferences
  # If you have an existing secret for the MongoDB password, you can specify it here
  # existingMongoPasswordSecret: telicent-user-preferences-db-password

# fullnameOverride sets the full name of the chart
fullnameOverride: ""
# nameOverride sets a custom name for the chart it differs from fullnameOverride as it is not fully qualified
nameOverride: ""

# annotations are additional annotations to add to the pod
annotations: {}

# replicas sets the replica count
replicas: 1

# resources sets the resource requests and limits for the pod
resources: {}

# revisionHistoryLimit sets the number of old ReplicaSets to retain
revisionHistoryLimit: 3
# image configuration
image:
  # imagePullSecrets is a list of secrets to use for pulling the image
  imagePullSecrets: []
  # pullPolicy defines the image pull policy
  pullPolicy: IfNotPresent
  # repository is the Docker repository for the image
  repository: 098669589541.dkr.ecr.eu-west-2.amazonaws.com/telicent-user-preferences-service

  # appVersion is used by default when defining an empty string
  # tag is the image tag to use
  tag: ""

# Pod security context
podSecurityContext:
  # fsGroup sets the filesystem group ID for the pod
  fsGroup: 185
  # runAsGroup sets the group ID for the pod
  runAsGroup: 185
  # runAsNonRoot ensures the pod runs as a non-root user
  runAsNonRoot: true
  # runAsUser sets the user ID for the pod
  runAsUser: 185
  # seccompProfile sets the seccomp profile for the pod
  seccompProfile:
    type: RuntimeDefault

# containerSecurityContext sets the container security context
containerSecurityContext:
  # allowPrivilegeEscalation prevents privilege escalation
  allowPrivilegeEscalation: false
  # capabilities sets the capabilities for the container
  capabilities:
    # drop all capabilities
    drop:
      - ALL
  # runAsGroup sets the group ID for the container
  runAsGroup: 185
  # runAsNonRoot ensures the container runs as a non-root user
  runAsNonRoot: true
  # runAsUser sets the user ID for the container
  runAsUser: 185
  # seccompProfile sets the seccomp profile for the container
  seccompProfile:
    # type defines the seccomp profile type
    # RuntimeDefault uses the default runtime seccomp profile
    type: RuntimeDefault

  metrics:
    # service is the configuration for the Prometheus service
    service:
      # port is the port for the Prometheus service
      port: 9464

# serviceAccount configuration
serviceAccount:
  # annotations are additional annotations for the service account
  annotations:
    {}
    # example.annotation/key: "value"
  # name is the name of the service account
  # If not set, the chart will generate a name based on the release name
  name: ""

# service configuration
service:
  # port is the port the service will listen on
  port: 11111
  # type defines the service type
  type: ClusterIP

ingress:
  # @ key ingress.principal is the principal to use for ingress traffic
  # If not set, it defaults to the Istio service account in the istio-system
  principal: ""
