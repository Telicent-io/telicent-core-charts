# Copyright (C) 2025 Telicent Limited
# Telicent User Preferences stand-alone chart

# @section Global Parameters
# @descStart
# Contains global parameters, these parameters are mirrored within the Telicent core umbrella chart
# @descEnd
## Please, note that this will override the image parameters
## Current available global image parameters: imageRegistry and imagePullSecrets

#
global:
  # @key global.existingTruststoreSecretName existingTruststoreSecretName is the name of an existing secret containing the truststore
  existingTruststoreSecretName: ""
  # @key global.istioServiceAccountName istioServiceAccountName is the name of the Istio service account to use for the Access API
  istioServiceAccountName: istio-ingress
  # @key global.istioNamespace istioNamespace is the namespace where Istio is installed
  istioNamespace: istio-system

# @section Configuration Parameters
# @descStart
# Contains configuration parameters specific to the User Preferences API application
# @descEnd
configuration:
  # @key configuration.javaOptions javaOptions are the JVM options for the application
  javaOptions: "-Xms512m -Xmx512m"

# @section mongo configuration
# @descStart
# This section contains the MongoDB configuration for the user preferences service.
# @descEnd
mongo:
  # @key mongo.url url is the MongoDB connection string
  url: mongodb://mongodb-demo-prereqs-mongodb-svc.mongodb-dev.svc.cluster.local:27017/user-preferences?authSource=admin
  # @key mongo.username username is used for authentication
  username: user-preferences
  # @key mongo.password password is the password for the MongoDB user
  # If you have an existing secret for the password, you can use existingMongoPasswordSecret
  password: "your.mongo.password.here"
  # @key mongo.database database is the name of the MongoDB database to use
  database: user-preferences
  # @key mongo.existingMongoPasswordSecret existingMongoPasswordSecret If you have an existing secret for the MongoDB password, you can specify it here
  existingMongoPasswordSecret: ""
  # @key mongo.existingCaSecret existingCaSecret If you have an existing secret for the CA certificate, you can specify it here. If you've specified to use TLS in the url, you must provide a CA certificate.
  existingCaSecret: ""

# @section common configuration
# @key fullnameOverride fullnameOverride sets the full name of the chart
fullnameOverride: ""
# @key nameOverride nameOverride sets a custom name for the chart it differs from fullnameOverride as it is not fully qualified
nameOverride: ""

# @key annotations annotations are additional annotations to add to the pod
annotations: {}

# @key replicas replicas sets the replica count
replicas: 1

# @key resources resources sets the resource requests and limits for the pod
resources: {}

# @key revisionHistoryLimit revisionHistoryLimit sets the number of old ReplicaSets to retain
revisionHistoryLimit: 3
# @section image configuration
image:
  # @key image.pullPolicy pullPolicy defines the image pull policy
  pullPolicy: IfNotPresent
  # @key image.repository repository is the Docker repository for the image
  repository: 098669589541.dkr.ecr.eu-west-2.amazonaws.com/telicent-user-preferences-service
  # @key image.tag tag is the image tag to use appVersion is used by default when defining an empty string
  tag: ""
# @key imagePullSecrets imagePullSecrets is a list of secrets to use for pulling the image
imagePullSecrets: []
podSecurityContext:
  # @key podSecurityContext.fsGroup fsGroup sets the filesystem group ID for the pod
  fsGroup: 185
  # @key podSecurityContext.runAsGroup runAsGroup sets the group ID for the pod
  runAsGroup: 185
  # @key podSecurityContext.runAsNonRoot runAsNonRoot ensures the pod runs as a non-root user
  runAsNonRoot: true
  # @key podSecurityContext.runAsUser runAsUser sets the user ID for the pod
  runAsUser: 185
  seccompProfile:
    # @key podSecurityContext.seccompProfile.type type sets the seccomp profile for the pod
    type: RuntimeDefault

containerSecurityContext:
  # @key containerSecurityContext.allowPrivilegeEscalation allowPrivilegeEscalation prevents privilege escalation
  allowPrivilegeEscalation: false
  capabilities:
    # @key containerSecurityContext.capabilities.drop drop all capabilities
    drop:
      - ALL
  # @key containerSecurityContext.runAsGroup runAsGroup sets the group ID for the container
  runAsGroup: 185
  # @key containerSecurityContext.runAsNonRoot runAsNonRoot ensures the container runs as a non-root user
  runAsNonRoot: true
  # @key containerSecurityContext.runAsUser runAsUser sets the user ID for the container
  runAsUser: 185
  seccompProfile:
    # @key containerSecurityContext.seccompProfile.type type defines the seccomp profile type
    # RuntimeDefault uses the default runtime seccomp profile
    type: RuntimeDefault
# @section metrics configuration
metrics:
  service:
    # @key metrics.service.port port for the Prometheus service
    port: 9464

# @section serviceAccount configuration
serviceAccount:
  # @key serviceAccount.annotations annotations are additional annotations for the service account
  annotations:
    {}
    # example.annotation/key: "value"
  # @key serviceAccount.name name is the name of the service account. If not set, the chart will generate a name based on the release name
  name: ""

# @section service configuration
service:
  # @key service.port port the service will listen on
  port: 11111
  # @key service.type type defines the service type
  type: ClusterIP

ingress:
  # @key ingress.principal principal to use for ingress traffic
  # If not set, it defaults to the Istio service account in the istio-system
  principal: ""
