# Copyright (C) 2025 Telicent Limited
# Telicent Graph UI stand-alone chart

# @section Global Parameters
# @descStart
# Contains global parameters, these parameters are mirrored within the Telicent core umbrella chart
# @descEnd

global:
  ## Current available global image parameters: imageRegistry and imagePullSecrets
  ## Please, note that this will override the image parameters
  # @key global.imageRegistry Global image registry
  imageregistry: quay.io
  # E.g.
  # imagePullSecrets:
  #   - myRegistryKeySecretName
  # @key global.imagePullSecrets Global registry secret names as an array
  imagePullSecrets: []

  # @key global.enterprise Enable enterprise mode, adding additional features and configurations
  enterprise: false

  # @key global.appHostDomain Domain associated with Telicent application services
  appHostDomain: "apps.telicent.io"
  # @key global.authHostDomain Domain associated with Telicent authentication services, including OIDC providers
  authHostDomain: "auth.telicent.io"

  # @key global.istioNamespace Namespace in which Istio is deployed
  # NOTE: Istio, by default, is deployed within the 'istio-system' namespace
  istioNamespace: istio-system
  # @key global.istioServiceAccountName Name of the Istio service account
  istioServiceAccountName: istio-ingress
  # @key global.istioGatewayName Name of the Istio Gateway Resource (LB operating at the edge of the mesh)
  istioGatewayName: ingress-gateway

# @section Configuration Parameters
# @descStart
# Contains configuration parameters specific to the Graph UI application
# @descEnd
configuration:
  # @key configuration.userPortalUiDeployed If set to true, User Portal links will be available within Graph UI
  userPortalUiDeployed: true
  # @key configuration.graphUiDeployed If set to true, Graph UI links will be available within Graph UI
  graphUiDeployed: true
  # @key configuration.dataCatalogUiDeployed If set to true, Data Catalog UI links will be available within Graph UI
  dataCatalogUiDeployed: true
  # @key configuration.signOutUrl The URL to be used for signing out
  signOutUrl: "https://your.host.here/logout"
  # @key configuration.graphUiMaptilerToken is the MapTiler token for the graph UI
  graphUiMaptilerToken: "your.maptiler.token.here"
  # @key configuration.graphUiMapboxStyleSpecUrl
  # For examples of the map configuration, see: _secret_config_js.tpl
  # graphUiMapboxStyleSpecUrl is the Mapbox style spec URL for the graph UI can be specified if using Mapbox styles
  graphUiMapboxStyleSpecUrl: ""
  # @key configuration.graphUiArcgisToken
  # graphUiArcgisToken is the ArcGIS token for the graph UI can be specified if using ArcGIS styles
  graphUiArcgisToken: ""
  # @key configuration.existingMapConfigSecretName  The name of an existing secret containing map configuration
  existingMapConfigSecretName: ""

# @section Common Parameters

#@key fullnameOverride String to fully override the generated release name
fullnameOverride: ""
#@key nameOverride String to replace the name of the chart in the Chart.yaml file
nameOverride: ""

# @section Graph UI Deployment Parameters

# @key replicas Number of Graph UI replicas to deploy
replicas: 1
# @key revisionHistoryLimit Number of controller revisions to keep
revisionHistoryLimit: 5

image:
  # @key image.registry [default: REGISTRY_NAME] Graph UI image registry
  registry: quay.io
  # @key image.repository [default: REPOSITORY_NAME/telicent-graph] Graph UI image name
  repository: telicent/telicent-graph
  # @key image.tag Seearch UI image tag. If not set, a tag is generated using the appVersion
  tag: ""
  # @key image.pullPolicy Graph UI image pull policy
  pullPolicy: IfNotPresent
# @key imagePullSecrets Specify registry secret names as an array
imagePullSecrets: [ ]

resources:
  requests:
    # @key resources.requests.cpu Set containers' CPU request
    cpu: "250m"
    # @key resources.requests.memory Set containers' memory request
    memory: "512Mi"
  limits:
    # @key resources.limits.cpu Set containers' CPU limit
    cpu: "375m"
    # @key resources.limits.memory Set containers' memory limit
    memory: "768Mi"

containerSecurityContext:
  # @key containerSecurityContext.runAsUser Set containers' Security Context runAsUser User ID
  runAsUser: 185
  # @key containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  allowPrivilegeEscalation: false
  capabilities:
    #@key containerSecurityContext.capabilities.drop List of capabilities to be dropped
    drop:
      - ALL
  seccompProfile:
    # @key containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    type: RuntimeDefault


podSecurityContext:
  # @key podSecurityContext.runAsUser Set the provisioning pod's Security Context runAsUser User ID
  runAsUser: 185
  # @key podSecurityContext.runAsGroup Set the provisioning pod's Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key podSecurityContext.runAsNonRoot Set the provisioning pod's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key podSecurityContext.fsGroup Set the provisioning pod's Group ID for the mounted volumes' filesystem
  fsGroup: 185
  seccompProfile:
    # @key podSecurityContext.seccompProfile.type Set the provisioning pod's Security Context seccomp profile
    type: RuntimeDefault

# @key affinity Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: { }
# @key nodeSelector Node labels for pod assignment
# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
nodeSelector: { }
# @key tolerations Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: [ ]

# @section Traffic Exposure Parameters
service:
  # @key service.port Graph UI service port
  port: 8080
  # @key service.type Graph UI service type
  type: ClusterIP

istio:
  ingress:
    # @key istio.ingress.principal Principal used for ingress traffic by the Istio AuthorizationPolicy. If not set, a principal is generated using 'global.istioNamespace' and 'global.istioServiceAccountName'
    principal: ""

# @section Service Account Parameters
serviceAccount:
  # @key serviceAccount.name Name of the ServiceAccount to use. If not set, a name is generated using the fullname
  name: ""
  #@key serviceAccount.annotations Additional custom annotations for the ServiceAccount
  annotations: { }
