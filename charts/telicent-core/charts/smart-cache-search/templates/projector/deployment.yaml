{{- /*
Copyright (C) 2025 Telicent Limited
*/}}

apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "smart-cache-search.fullname" . }}-projector
  labels:
    {{- include "smart-cache-search.projectorLabels" . | nindent 4 }}

spec:
  replicas: {{ .Values.projector.replicas }}
  revisionHistoryLimit: {{ .Values.projector.revisionHistoryLimit }}
  selector:
    matchLabels:
    {{- include "smart-cache-search.projectorSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /
        prometheus.io/port: "9464"
        prometheus.io/scrape: "true"
     
      {{- range $key, $value := .Values.projector.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      labels:
        {{- include "smart-cache-search.projectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "smart-cache-search.projectorServiceAccountName" . }}
      securityContext: {{- toYaml .Values.projector.podSecurityContext | nindent 8 }}     
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: search-projector
        image: {{ .Values.projector.image.repository }}:{{ include "smart-cache-search-projector.version" . }}
        imagePullPolicy: {{ .Values.projector.image.pullPolicy }}
        resources: {{- toYaml .Values.projector.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.projector.containerSecurityContext | nindent 10 }}

        {{- with .Values.projector.extraEnvs }}
        env:
        {{- range . }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- end }}
        envFrom:
        {{- if .Values.projector.elasticSecrets.existingEnvironmentSecretName }}
        - secretRef:
            name: {{ .Values.projector.elasticSecrets.existingEnvironmentSecretName | quote }}
            optional: true
        {{- else }}
        - secretRef:
            name: {{ include "smart-cache-search.fullname" . }}-projector
            optional: true
        {{- end }}
        - configMapRef:
            name: {{ include "smart-cache-search.fullname" . }}-projector
        {{- if .Values.projector.extraEnvs }}
        {{- range $key, $value := .Values.projector.extraEnvs }}
        {{- end }}
        {{- end }}

        ports:
        - name: metrics
          containerPort: 9464
          protocol: TCP
        - name: health-probes
          containerPort: 10101
          protocol: TCP

        readinessProbe:
          httpGet:
            path: /healthz
            port: 10101
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 60
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /version-info
            port: 10101
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 60
          timeoutSeconds: 5
  
        volumeMounts:
        - mountPath: /app/config/kafka-auth/
          name: kafka-auth-config
        {{- if .Values.global.existingTruststoreSecretName }}
        - mountPath: {{ .Values.global.truststore.mountPath | default "/app/config/truststore" }}
          name: truststore-volume
        {{- end }}
    
      volumes:
      {{- if .Values.global.existingKafkaConfigSecretName }}
      - name: kafka-auth-config
        secret:
          secretName: {{ .Values.global.existingKafkaConfigSecretName }}
      {{- end }}

      {{- if .Values.global.existingTruststoreSecretName }}
      - name: truststore-volume
        secret:
          secretName: {{ .Values.global.existingTruststoreSecretName }}
      {{- end }}