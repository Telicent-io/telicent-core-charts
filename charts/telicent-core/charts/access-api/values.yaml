# Copyright (C) 2025 Telicent Limited
# Telicent Access API stand-alone chart

# @section Global Parameters
# @descStart
# Contains global parameters, these parameters are mirrored within the Telicent core umbrella chart
# @descEnd

global:
  ## Current available global image parameters: imageRegistry and imagePullSecrets
  ## Please, note that this will override the image parameters
  # @key global.imageRegistry Global image registry
  imageregistry: quay.io
  # E.g.
  # imagePullSecrets:
  #   - myRegistryKeySecretName
  # @key global.imagePullSecrets Global registry secret names as an array
  imagePullSecrets: []

  # @key global.appHostDomain Domain associated with Telicent application services
  appHostDomain: "apps.telicent.io"
  # @key global.authHostDomain Domain associated with Telicent authentication services, including OIDC providers
  authHostDomain: "auth.telicent.io"

  # @key global.istioNamespace Namespace in which Istio is deployed
  # NOTE: Istio, by default, is deployed within the 'istio-system' namespace
  istioNamespace: istio-system
  # @key global.istioServiceAccountName Name of the Istio service account
  istioServiceAccountName: istio-ingress
  # @key global.istioGatewayName Name of the Istio Gateway Resource (LB operating at the edge of the mesh)
  istioGatewayName: ingress-gateway

# @section Configuration Parameters
# @descStart
# Contains configuration parameters specific to the Access API application
# @descEnd
configuration:
  # @key configuration.debug Enable debug logging
  debug: true
  # @key configuration.openidProviderUrl The URL of the OIDC provider
  openidProviderUrl: "https://oidc.example.com"
  # @key configuration.scimEnabled Enable SCIM user management
  scimEnabled: true

# @section Common Parameters
#@key fullnameOverride String to fully override the generated release name
fullnameOverride: ""
#@key existingConfigmap Name of the existing configmap for configuration
existingConfigmap: ""
#@key existingCacertConfigmap Name of the existing configmap for extra certificates
existingCacertConfigmap: ""
#@key cacert Path to the CA certificate file
cacert: ""

# @section MongoDB Parameters
mongo:
  # @key mongo.url MongoDB connection URL
  url: "mongodb://example.mongodb.net"
  # @key mongo.username MongoDB username
  username: root
  # @key mongo.password MongoDB password
  password: ""
  # @key mongo.collection MongoDB collection
  collection: access
  # @key mongo.connectionStringOptions MongoDB additional connection values
  connectionStringOptions: "authMechanism=SCRAM-SHA-1&retryWrites=false"
  # @key mongo.retryRewrites Enable Retryable Writes
  retryRewrites: "false"
  # @key mongo.existingMongoPasswordSecret Existing secret containing the MongoDB password
  existingMongoPasswordSecret: ""
  # @key mongo.existingCaSecret existingCaSecret If you have an existing secret for the CA certificate, you can specify it here. If you've specified to use TLS in the url, you must provide a CA certificate.
  existingCaSecret: ""
  # @key mongo.cacertPath Path to the CA certificate file, must be set if TLS is enabled in the url and mirror the path in the connectionStringOptions
  cacertPath: ""

# @section Access API Deployment Parameters
# @key replicas Number of Access API replicas to deploy
replicas: 1
# @key revisionHistoryLimit Number of controller revisions to keep
revisionHistoryLimit: 5

image:
  # @key image.registry [default: REGISTRY_NAME] Access API image registry
  registry: quay.io
  # @key image.repository [default: REPOSITORY_NAME/telicent-access-api] Access API image name
  repository: telicent/telicent-access-api
  # @key image.tag Access API image tag. If not set, a tag is generated using the appVersion
  tag: ""
  # @key image.pullPolicy Access API image pull policy
  pullPolicy: IfNotPresent
  # @key image.pullSecrets Specify registry secret names as an array
  pullSecrets: []

resources:
  requests:
    # @key resources.requests.cpu Set containers' CPU request
    cpu: "250m"
    # @key resources.requests.memory Set containers' memory request
    memory: "512Mi"
  limits:
    # @key resources.limits.cpu Set containers' CPU limit
    cpu: "350m"
    # @key resources.limits.memory Set containers' memory limit
    memory: "768Mi"

containerSecurityContext:
  # @key containerSecurityContext.runAsUser Set containers' Security Context runAsUser User ID
  runAsUser: 185
  # @key containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  allowPrivilegeEscalation: false
  capabilities:
    #@key containerSecurityContext.capabilities.drop List of capabilities to be dropped
    drop:
      - ALL
  seccompProfile:
    # @key containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    type: RuntimeDefault

podSecurityContext:
  # @key podSecurityContext.runAsUser Set the provisioning pod's Security Context runAsUser User ID
  runAsUser: 185
  # @key podSecurityContext.runAsGroup Set the provisioning pod's Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key podSecurityContext.runAsNonRoot Set the provisioning pod's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key podSecurityContext.fsGroup Set the provisioning pod's Group ID for the mounted volumes' filesystem
  fsGroup: 185
  seccompProfile:
    # @key podSecurityContext.seccompProfile.type Set the provisioning pod's Security Context seccomp profile
    type: RuntimeDefault

# @section Traffic Exposure Parameters
service:
  # @key service.port Access API service port
  port: 8080
  # @key service.type Access API service type
  type: ClusterIP

istio:
  ingress:
    # @key istio.ingress.principal Principal used for ingress traffic by the Istio AuthorizationPolicy. If not set, a principal is generated using 'global.istioNamespace' and 'global.istioServiceAccountName'
    principal: ""

  smartCacheSearchApi:
    # @key istio.smartCacheSearchApi.principal Principal used for Smart Cache Search API traffic by the Istio AuthorizationPolicy. If not set, a principal is generated using 'serviceAccountName' and the current namespace
    principal: ""
    # @key istio.smartCacheSearchApi.serviceAccountName Name of the Smart Cache Search API service account
    serviceAccountName: "smart-cache-search-api"

  smartCacheGraph:
    # @key istio.smartCacheGraph.principal Principal used for Smart Cache Graph traffic by the Istio AuthorizationPolicy. If not set, a principal is generated using 'serviceAccountName' and the current namespace
    principal: ""
    # @key istio.smartCacheGraph.serviceAccountName Name of the Smart Cache Graph service account
    serviceAccountName: "smart-cache-graph"

# @section Service Account Parameters
serviceAccount:
  # @key serviceAccount.name Name of the ServiceAccount to use. If not set, a name is generated using the fullname
  name: ""
  #@key serviceAccount.annotations Additional custom annotations for the ServiceAccount
  annotations: { }
