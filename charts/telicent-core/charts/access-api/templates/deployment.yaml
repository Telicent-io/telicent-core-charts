{{- /*
Copyright (C) 2025 Telicent Limited
*/}}

apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "access-api.fullname" . }}
  labels:
  {{- include "access-api.labels" . | nindent 4 }}

spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
    {{- include "access-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "access-api.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "access-api.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
     
      {{- $pullSecret := .Values.global.imagePullSecrets | default .Values.image.pullSecrets }}
      {{- with $pullSecret }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: access-api
        image: {{ include "access-api.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}

        {{- if or .Values.existingCacertConfigmap .Values.cacert }}
        env:
        - name: NODE_EXTRA_CA_CERTS
          value: "/certs/ca.crt"
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "access-api.envConfigmapName" . }}
        - secretRef:
            {{- if .Values.mongo.existingMongoPasswordSecret }}
            name: {{ .Values.mongo.existingMongoPasswordSecret }}
            {{ else }}
            name: {{ include "access-api.envSecretName" . }}
            {{- end }}
            
        ports:
        - name: http
          containerPort: {{ .Values.service.port }} 
          protocol: TCP
              
        volumeMounts:
        {{- if or .Values.existingCacertConfigmap .Values.cacert }}
        - name: cert-volume
          mountPath: /certs
        {{- end }}
        {{- if contains "tls=true" .Values.mongo.connectionStringOptions }}
        - name: ca-certificate-volume
          mountPath: {{ .Values.mongo.cacertPath | default "/app/config/ca-certificate" }}
      {{- end }}

      volumes:
      {{- if or .Values.existingCacertConfigmap .Values.cacert }}
      - name: cert-volume
        configMap:
          name: {{ include "access-api.cacertConfigmapName" . }}
      {{- end }}
      {{- if .Values.mongo.existingCaSecret }}
      - name: ca-certificate-volume
        secret:
          secretName: {{ .Values.mongo.existingCaSecret }}
      {{- end }}
     