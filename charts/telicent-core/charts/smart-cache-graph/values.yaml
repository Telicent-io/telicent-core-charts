# Copyright (C) 2025 Telicent Limited
# Telicent Smart Cache Graph stand-alone chart

# @section Global Parameters
# @descStart
# Contains global parameters, these parameters are mirrored within the Telicent core umbrella chart
# @descEnd

global:
  ## Current available global image parameters: imageRegistry and imagePullSecrets
  ## Please, note that this will override the image parameters
  # @key global.imageRegistry Global image registry
  imageregistry: quay.io
  # E.g.
  # imagePullSecrets:
  #   - myRegistryKeySecretName
  # @key global.imagePullSecrets Global registry secret names as an array
  imagePullSecrets: []

  # @key global.enterprise Enable enterprise mode, adding additional features and configurations
  enterprise: false

  # @key global.appHostDomain Domain associated with Telicent application services
  appHostDomain: "apps.telicent.io"
  # @key global.authHostDomain Domain associated with Telicent authentication services, including OIDC providers
  authHostDomain: "auth.telicent.io"
  # @key global.jwksUrl Endpoint exposing multiple public keys represented as JWKs (JSON Web Key Set)
  # NOTE: For Dex the endpoint would be https://{yourDexDomain}/keys
  jwksUrl: "https://{yourAuthdomain}/.well-known/jwks.json"

  # @key global.istioNamespace Namespace in which Istio is deployed
  # NOTE: Istio, by default, is deployed within the 'istio-system' namespace
  istioNamespace: istio-system
  # @key global.istioServiceAccountName Name of the Istio service account
  istioServiceAccountName: istio-ingress
  # @key global.istioGatewayName Name of the Istio Gateway Resource (LB operating at the edge of the mesh)
  istioGatewayName: ingress-gateway

  # @key global.kafkaBootstrapUrls Comma separated list containing Kafka bootstrap URLs
  kafkaBootstrapUrls: "kafka-bootstrap.kafka.svc.cluster.local:9092"
  # @key global.existingKafkaConfigSecretName Name of an existing secret containing Kafka configuration
  existingKafkaConfigSecretName: ""

  # @key global.existingTruststoreSecretName Name of an existing secret containing the truststore
  existingTruststoreSecretName: ""
  truststore:
    # @key global.truststore.mountPath The mount path for the truststore in the container
    mountPath: /app/config/truststore

# @section Configuration Parameters
# @descStart
# Contains configuration parameters specific to the Smart Cache Graph application
# @descEnd
configuration:
  # @key configuration.userAttributesUrl URL for the user details endpoint
  userAttributesUrl: http://access-api.tc-system.svc.cluster.local:8080/users/lookup/{user}
  # @key configuration.attributeHierarchyUrl URL for the user hierarchy endpoint
  attributeHierarchyUrl: http://access-api.tc-system.svc.cluster.local:8080/hierarchies/lookup/{name}

  # @key configuration.javaOptions JVM options for the application
  javaOptions: -Xmx5120m -Xms2048m -Djavax.net.ssl.trustStore=/app/config/truststore/truststore.jks

  # @key configuration.otelMetricsExporter OpenTelemetry metrics exporter
  # Options: prometheus, otlp, none
  otelMetricsExporter: prometheus
  # @key configuration.otelTracesExporter OpenTelemetry traces exporter
  # Options: otlp, none
  otelTracesExporter: none

# @section Common Parameters
#@key fullnameOverride String to fully override the generated release name
fullnameOverride: ""
# @key nameOverride String to partially override fullname (will maintain the release name)
nameOverride: ""

# @section Smart Cache Graph Statefulset Parameters
# @key replicas Number of Smart Cache Graph replicas to deploy
replicas: 1
# @key revisionHistoryLimit Number of controller revisions to keep
revisionHistoryLimit: 5
# @key annotations Add extra annotations to the Statefulset object
annotations: { }

image:
  # @key image.registry [default: REGISTRY_NAME] Smart Cache Graph image registry
  registry: quay.io
  # @key image.repository [default: REPOSITORY_NAME/smart-cache-graph] Smart Cache Graph image name
  repository: telicent/smart-cache-graph
  # @key image.tag Smart Cache Graph image tag. If not set, a tag is generated using the appVersion
  tag: ""
  # @key image.pullPolicy Smart Cache Graph image pull policy
  pullPolicy: IfNotPresent
  # @key image.pullSecrets Specify registry secret names as an array
  pullSecrets: [ ]

resources:
  requests:
    # @key resources.requests.cpu Set containers' CPU request
    cpu: "500m"
    # @key resources.requests.memory Set containers' memory request
    memory: "8000Mi"
  limits:
    # @key resources.limits.cpu Set containers' CPU limit
    cpu: "1500m"
    # @key resources.limits.memory Set containers' memory limit
    memory: "12000Mi"

containerSecurityContext:
  # @key containerSecurityContext.runAsUser Set containers' Security Context runAsUser User ID
  runAsUser: 185
  # @key containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  allowPrivilegeEscalation: false
  capabilities:
    #@key containerSecurityContext.capabilities.drop List of capabilities to be dropped
    drop:
      - ALL
  seccompProfile:
    # @key containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    type: RuntimeDefault

podSecurityContext:
  # @key podSecurityContext.runAsUser Set the provisioning pod's Security Context runAsUser User ID
  runAsUser: 185
  # @key podSecurityContext.runAsGroup Set the provisioning pod's Security Context runAsGroup Group ID
  runAsGroup: 185
  # @key podSecurityContext.runAsNonRoot Set the provisioning pod's Security Context runAsNonRoot
  runAsNonRoot: true
  # @key podSecurityContext.fsGroup Set the provisioning pod's Group ID for the mounted volumes' filesystem
  fsGroup: 185
  seccompProfile:
    # @key podSecurityContext.seccompProfile.type Set the provisioning pod's Security Context seccomp profile
    type: RuntimeDefault

# @section Persistent Volume Claim Parameters
persistentVolumeClaims:
  backupsVolume:
    # @key persistentVolumeClaims.backupsVolume.size PVC Storage Request for the Backup volume
    size: 25Gi
    # @key persistentVolumeClaims.backupsVolume.storageClass PVC Storage Class for the Backup data volume
    storageClass: gp3
  datasetsVolume:
    # @key persistentVolumeClaims.datasetsVolume.size PVC Storage Request for the Graph volume
    size: 25Gi
    # @key persistentVolumeClaims.datasetsVolume.storageClass iPVC Storage Class for the Graph data volume
    storageClass: gp3

# @section Metrics Parameters
metrics:
  service:
    # @key metrics.service.name Name for the Prometheus service
    name: metrics
    # @key metrics.service.port Port for the Prometheus service
    port: 9464

# @section Traffic Exposure Parameters
service:
  # @key service.port Smart Cache Graph service port
  port: 3030
  # @key service.type Smart Cache Graph service type
  type: ClusterIP

istio:
  ingress:
    # @key istio.ingress.principal Principal used for ingress traffic by the Istio AuthorizationPolicy. If not set, a principal is generated using 'global.istioNamespace' and 'global.istioServiceAccountName'
    principal: ""

# @section Service Account Parameters
serviceAccount:
  # @key serviceAccount.name Name of the ServiceAccount to use. If not set, a name is generated using the fullname
  name: ""
  #@key serviceAccount.annotations Additional custom annotations for the ServiceAccount
  annotations: { }
