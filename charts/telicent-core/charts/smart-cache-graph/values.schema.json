{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "appHostDomain": {
                    "type": "string",
                    "description": "Domain name associated with the application",
                    "default": "apps.telicent.io"
                },
                "authHostDomain": {
                    "type": "string",
                    "description": "Domain to be used for interacting with Telicent authentication services, including OIDC providers",
                    "default": "auth.telicent.io"
                },
                "istioServiceAccountName": {
                    "type": "string",
                    "description": "The name of the Istio service account to use for the Smart Cache Graph",
                    "default": "istio-ingress"
                },
                "istioNamespace": {
                    "type": "string",
                    "description": "The namespace where Istio is installed",
                    "default": "istio-system"
                },
                "existingTruststoreSecretName": {
                    "type": "string",
                    "description": "The name of an existing secret containing the truststore",
                    "default": ""
                },
                "truststore": {
                    "type": "object",
                    "properties": {
                        "mountPath": {
                            "type": "string",
                            "description": "The mount path for the truststore in the container",
                            "default": "/app/config/truststore"
                        }
                    }
                }
            }
        },
        "configuration": {
            "type": "object",
            "properties": {
                "userAttributesUrl": {
                    "type": "string",
                    "description": "URL for the user details endpoint",
                    "default": "http://access-api.tc-system.svc.cluster.local:8080/users/lookup/{user}"
                },
                "attributeHierarchyUrl": {
                    "type": "string",
                    "description": "URL for the user hierarchy endpoint",
                    "default": "http://access-api.tc-system.svc.cluster.local:8080/hierarchies/lookup/{name}"
                },
                "javaOptions": {
                    "type": "string",
                    "description": "JVM options for the application",
                    "default": "-Xmx5120m -Xms2048m -Djavax.net.ssl.trustStore=/app/config/truststore/truststore.jks"
                },
                "otelMetricsExporter": {
                    "type": "string",
                    "description": "OpenTelemetry metrics exporter",
                    "default": "prometheus"
                },
                "otelTracesExporter": {
                    "type": "string",
                    "description": "OpenTelemetry traces exporter",
                    "default": "none"
                }
            }
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override the generated release name",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "sets a custom name for the chart it differs from fullnameOverride as it is not fully qualified",
            "default": ""
        },
        "replicas": {
            "type": "number",
            "description": "Number of Smart Cache Graph replicas to deploy",
            "default": 1
        },
        "revisionHistoryLimit": {
            "type": "number",
            "description": "Number of controller revisions to keep",
            "default": 5
        },
        "annotations": {
            "type": "object",
            "description": "Add extra annotations to the Statefulset object",
            "default": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Smart Cache Graph image registry",
                    "default": "REGISTRY_NAME"
                },
                "repository": {
                    "type": "string",
                    "description": "Smart Cache Graph image name",
                    "default": "REPOSITORY_NAME/smart-cache-graph"
                },
                "tag": {
                    "type": "string",
                    "description": "Smart Cache Graph image tag. If not set, a tag is generated using the appVersion",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Smart Cache Graph image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "description": "Set containers' CPU request",
                            "default": "500m"
                        },
                        "memory": {
                            "type": "string",
                            "description": "Set containers' memory request",
                            "default": "8000Mi"
                        }
                    }
                },
                "limits": {
                    "type": "object",
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "description": "Set containers' CPU limit",
                            "default": "1500m"
                        },
                        "memory": {
                            "type": "string",
                            "description": "Set containers' memory limit",
                            "default": "12000Mi"
                        }
                    }
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "runAsUser": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsUser User ID",
                    "default": 185
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsGroup Group ID",
                    "default": 185
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set container's Security Context runAsNonRoot",
                    "default": true
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean",
                    "description": "Set container's Security Context allowPrivilegeEscalation",
                    "default": false
                },
                "capabilities": {
                    "type": "object",
                    "properties": {
                        "drop": {
                            "type": "array",
                            "description": "List of capabilities to be dropped",
                            "default": [
                                "ALL"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set container's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "runAsUser": {
                    "type": "number",
                    "description": "Set the provisioning pod's Security Context runAsUser User ID",
                    "default": 185
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set the provisioning pod's Security Context runAsGroup Group ID",
                    "default": 185
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set the provisioning pod's Security Context runAsNonRoot",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set the provisioning pod's Group ID for the mounted volumes' filesystem",
                    "default": 185
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set the provisioning pod's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "persistentVolumeClaims": {
            "type": "object",
            "properties": {
                "backupsVolume": {
                    "type": "object",
                    "properties": {
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for Backup volume",
                            "default": "100Gi"
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "PVC Storage Class for the Backup data volume",
                            "default": "gp3-enc"
                        }
                    }
                },
                "datasetsVolume": {
                    "type": "object",
                    "properties": {
                        "size": {
                            "type": "string",
                            "description": "PVC Storage Request for Graph volume",
                            "default": "25Gi"
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "iPVC Storage Class for the Graph data volume",
                            "default": "gp3-enc"
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "number",
                            "description": "is the port for the Prometheus service",
                            "default": 9464
                        },
                        "name": {
                            "type": "string",
                            "description": "is the name for the Prometheus service",
                            "default": "metrics"
                        }
                    }
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "number",
                    "description": "is the port the service will listen on",
                    "default": 3030
                },
                "type": {
                    "type": "string",
                    "description": "defines the service type",
                    "default": "ClusterIP"
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "principal": {
                    "type": "string",
                    "description": "Principal to use for ingress traffic. If not set, defaults to the Istio service account in the istio-system",
                    "default": ""
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the created ServiceAccount. If not set, a name is generated using the fullname template",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                }
            }
        }
    }
}